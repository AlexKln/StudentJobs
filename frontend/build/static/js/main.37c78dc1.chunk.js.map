{"version":3,"sources":["components/Refresh.js","components/NavigationBar.js","components/Auth.js","components/layout/Header.js","components/JobItem.js","components/Jobs.js","components/pages/About.js","components/pages/Register.js","App.js","index.js"],"names":["Refresh","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","title","onSubmit","e","preventDefault","window","location","reload","inherits","createClass","key","value","react_default","a","createElement","ButtonToolbar","Button","variant","size","type","block","Component","NavigationBar","Fragment","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","className","Link","as","to","pathname","jobs","props","onClick","logOut","Auth","user","password","isLoggedIn","successAlert","setToken","idToken","localStorage","setItem","getToken","getItem","handleChange","event","_event$target","target","name","setState","defineProperty","handleSubmit","axios","post","username","then","res","data","access_token","prevState","catch","error","alert","response","message","err","setTimeout","failureAlert","removeItem","_this2","AuthStr","get","headers","Authorization","prevProps","_this3","turnOffSuccessAlert","clearTimeout","turnOffFailureAlert","_this4","components_NavigationBar","Alert","components_Refresh","refresh","react_router","FormGroup","controlId","bssize","FormLabel","FormControl","autoFocus","onChange","bsize","Header","style","background","color","textAlign","padding","components_Auth","JobItem","getStyle","borderBottom","_this$props$job","job","company","description","link","Card","Accordion","fontSize","eventKey","Body","href","dangerouslySetInnerHTML","__html","Jobs","defaultActiveKey","map","components_JobItem","About","Register","registered","App","completed","toConsumableArray","alertStyle","react_router_dom","layout_Header","exact","path","render","component","ReactDOM","src_App_0","document","getElementById"],"mappings":"oRA+CeA,EAzCf,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACIQ,MAAQ,CACJC,MAAO,IAFfhB,EAKIiB,SAAW,SAACC,GACRA,EAAEC,iBACFC,OAAOC,SAASC,UAPxBtB,EAAA,OAAAC,OAAAsB,EAAA,EAAAtB,CAAAJ,EAAAC,GAAAG,OAAAuB,EAAA,EAAAvB,CAAAJ,EAAA,EAAA4B,IAAA,SAAAC,MAAA,WAkBQ,OACIC,EAAAC,EAAAC,cAAA,QAAMZ,SAAUd,KAAKc,UACjBU,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIC,QAAQ,UACRC,KAAK,KACLC,KAAK,SACLR,MAAM,UACNS,OAAK,GALT,iBArBpBtC,EAAA,CAA6BuC,+BCyBdC,6MA1BXtB,MAAQ,2EAMJ,OACIY,EAAAC,EAAAC,cAACF,EAAAC,EAAMU,SAAP,KACIX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACtBd,EAAAC,EAAAC,cAACU,EAAA,EAAOG,OAAR,CAAeC,gBAAc,qBAC7BhB,EAAAC,EAAAC,cAACU,EAAA,EAAOK,SAAR,CAAiBC,GAAG,oBAChBlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKC,UAAU,WACXpB,EAAAC,EAAAC,cAACiB,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAI,CACpBC,SAAU,QACVpC,MAAO,CAAEqC,KAAMjD,KAAKkD,MAAMD,QAF9B,QAIAzB,EAAAC,EAAAC,cAACiB,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAG,UAAvB,WAGRvB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,QAAQ,iBAAiBsB,QAASnD,KAAKkD,MAAME,QAArD,oBApBQnB,kECgKboB,6MA5JXzC,MAAQ,CACJ0C,KAAM,GACNC,SAAU,GACVC,YAAY,EACZC,cAAc,KAwBlBC,SAAW,SAAAC,GAEPC,aAAaC,QAAQ,WAAYF,MAGrCG,SAAW,WAEP,OAAOF,aAAaG,QAAQ,eAGhCC,aAAe,SAACC,GAAU,IAAAC,EACED,EAAME,OAAtBC,EADcF,EACdE,KAAM7C,EADQ2C,EACR3C,MACd1B,EAAKwE,SAALvE,OAAAwE,EAAA,EAAAxE,CAAA,GAAiBsE,EAAO7C,OAG5BgD,aAAe,SAACN,GACZA,EAAMjD,iBAENwD,IAAMC,KAAK,8BAAuD,CAC9DC,SAAU7E,EAAKe,MAAM0C,KACrBC,SAAU1D,EAAKe,MAAM2C,WAEpBoB,KAAK,SAAAC,GACF/E,EAAK6D,SAASkB,EAAIC,KAAKC,cACvBjF,EAAKwE,SAAS,SAAAU,GAGV,OAFAA,EAAUtB,cAAe,EACzBsB,EAAUvB,YAAa,EAChBuB,MAIbC,MACE,SAAAC,GACI,IACIC,MAAMD,EAAME,SAASN,KAAKO,SAE9B,MAAOC,GACHH,MAAM,2BAQtBI,WAAW,kBAAOzF,EAAKe,MAAM4C,YAAc3D,EAAKwE,SAAS,CAAEkB,cAAc,KAAS,QAGtFnC,OAAS,SAACa,GACNL,aAAa4B,WAAW,YACxB3F,EAAKwE,SAAS,CACVf,KAAM,GACNC,SAAU,GACVC,YAAY,wFA1EA,IAAAiC,EAAAzF,KACV0F,EAAU,UAAY1F,KAAK8D,WACjCU,IAAMmB,IAAI,iCACN,CAAEC,QAAW,CAAEC,cAAiBH,KAC/Bf,KAAK,SAAAC,GAAG,OAAIa,EAAKpB,SAAS,CAAEb,YAAY,iDAI9BsC,EAAWf,GAAW,IAAAgB,EAAA/F,KACjCA,KAAKY,MAAM6C,eACXzD,KAAKgG,oBAAsBV,WAAW,WAClCS,EAAK1B,SAAS,CAAEZ,cAAc,KAC/B,sDAKPwC,aAAajG,KAAKgG,qBAClBC,aAAajG,KAAKkG,sDA4Db,IAAAC,EAAAnG,KAiEL,OACIA,KAAKY,MAAM4C,WA/DPhC,EAAAC,EAAAC,cAACF,EAAAC,EAAMU,SAAP,KACIX,EAAAC,EAAAC,cAAC0E,EAAD,CACAnD,KAAMkD,EAAKjD,MAAMD,KACjBG,OAAQ+C,EAAK/C,SAEZ+C,EAAKvF,MAAM6C,cAAgBjC,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CACxB/E,IAAK,EACLO,QAAQ,WAFgB,YAM5BL,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAC4E,EAAD,CAASC,QAASJ,EAAKjD,MAAMqD,UAC7B/E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CACIzD,GAAI,CACAC,SAAU,QACVpC,MAAO,CAAEqC,KAAMkD,EAAKjD,MAAMD,UAStCzB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,SACXpB,EAAAC,EAAAC,cAAA,QAAMZ,SAAUqF,EAAK5B,cACjB/C,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAWC,UAAU,QAAQC,OAAO,SAChCnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,iBACApF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACIC,WAAS,EACT/E,KAAK,OACLqC,KAAK,OACL7C,MAAO4E,EAAKvF,MAAM0C,KAClByD,SAAUZ,EAAKnC,gBAGvBxC,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAWC,UAAU,WAAWC,OAAO,SACnCnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,iBACApF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACItF,MAAO4E,EAAKvF,MAAM2C,SAClBwD,SAAUZ,EAAKnC,aACfjC,KAAK,OACLqC,KAAK,cAGb5C,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACII,OAAK,EACLgF,MAAM,QACNjF,KAAK,UAHT,SAOAP,EAAAC,EAAAC,cAACiB,EAAA,EAAIE,KAAL,CAAUC,GAAID,IAAME,GAAG,aAAvB,aAIJvB,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAUzD,GAAG,cAlJdd,aC+BJgF,6MAlCXrG,MAAQ,CACJ0C,KAAM,GACNC,SAAU,GACVC,YAAY,EACZC,cAAc,2EAgBd,OACIjC,EAAAC,EAAAC,cAACF,EAAAC,EAAMU,SAAP,KACIX,EAAAC,EAAAC,cAAA,UAAQwF,MAdI,CAChBC,WAAY,OACZC,MAAO,OACPC,UAAW,SACXC,QAAS,SAWD9F,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAC6F,EAAD,CACIhB,QAASvG,KAAKkD,MAAMqD,QACpBtD,KAAMjD,KAAKkD,MAAMD,gBA3BpBhB,+BCiDNuF,EAhDf,SAAA7H,GAAA,SAAA6H,IAAA,IAAA5H,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwH,GAAA,QAAAvH,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAA0H,IAAA/G,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEqH,SAAW,WACT,MAAO,CACLN,WAAY,UACZG,QAAS,MACTI,aAAc,oBALpB7H,EAAA,OAAAC,OAAAsB,EAAA,EAAAtB,CAAA0H,EAAA7H,GAAAG,OAAAuB,EAAA,EAAAvB,CAAA0H,EAAA,EAAAlG,IAAA,SAAAC,MAAA,WAUI,IADOoG,EASqD3H,KAAKkD,MAAM0E,IAA/DlF,EATDiF,EASCjF,GAAImF,EATLF,EASKE,QAAShH,EATd8G,EASc9G,MAAOiH,EATrBH,EASqBG,YAAaC,EATlCJ,EASkCI,KAAM7G,EATxCyG,EASwCzG,SAC/C,OACEM,EAAAC,EAAAC,cAACsG,EAAA,EAAD,KACExG,EAAAC,EAAAC,cAACsG,EAAA,EAAKf,OAAN,KACEzF,EAAAC,EAAAC,cAACuG,EAAA,EAAU1F,OAAX,CAAkBO,GAAIlB,IAAQsF,MAZnB,CACfE,MAAO,UACPE,QAAS,MACTY,SAAU,QASyCrG,QAAQ,OAAOsG,SAAUzF,GACrE7B,EADH,MACYW,EAAAC,EAAAC,cAAA,SAAImG,GADhB,KAC+B3G,IAGjCM,EAAAC,EAAAC,cAACuG,EAAA,EAAUxF,SAAX,CAAoB0F,SAAUzF,GAC5BlB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,YACbpB,EAAAC,EAAAC,cAACsG,EAAA,EAAKI,KAAN,CAAWlB,MAbE,CACnBgB,SAAU,SAcF1G,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,QAAQ,UAAUwG,KAAMN,GAAhC,SAAoDvG,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAC1DF,EAAAC,EAAAC,cAAA,OAEE4G,wBAAyB,CAAEC,OAAQT,aAjCnDN,EAAA,CAA6BvF,aCcduG,mLAZX,OACEhH,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAWQ,iBAAiB,KAExBzI,KAAKkD,MAAMhC,SAASN,MAAMqC,KAAKyF,IAAI,SAACd,GAAD,OACjCpG,EAAAC,EAAAC,cAACiH,EAAD,CAASrH,IAAKsG,EAAIlF,GAAIkF,IAAKA,cANpB3F,aCSJ2G,MAXf,WACI,OACIpH,EAAAC,EAAAC,cAACF,EAAAC,EAAMU,SAAP,KACIX,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,qFC2EDmH,6MA5EbjI,MAAQ,CACN0C,KAAM,GACNC,SAAU,GACVuF,YAAY,KAGdpF,SAAW,SAAAC,GAETC,aAAaC,QAAQ,WAAYF,MAGnCK,aAAe,SAACC,GAAU,IAAAC,EACAD,EAAME,OAAtBC,EADgBF,EAChBE,KAAM7C,EADU2C,EACV3C,MACd1B,EAAKwE,SAALvE,OAAAwE,EAAA,EAAAxE,CAAA,GAAiBsE,EAAO7C,OAG1BgD,aAAe,SAACN,GACdA,EAAMjD,iBACNwD,IAAMC,KAAK,iCAA0D,CACnEC,SAAU7E,EAAKe,MAAM0C,KACrBC,SAAU1D,EAAKe,MAAM2C,WAEpBoB,KACC,SAAAC,GACE/E,EAAK6D,SAASkB,EAAIC,KAAKC,cACvBI,MAAM,2BACNrF,EAAKwE,SAAS,CAAEyE,YAAY,MAE9B9D,MACA,SAAAC,GACEC,MAAMD,EAAME,SAASN,KAAKO,oFAMhC,OACEpF,KAAKY,MAAMkI,WACX7H,OAAOC,SAASC,SAEhBK,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,SACbpB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMZ,SAAUd,KAAKuE,cACnB/C,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAWC,UAAU,QAAQC,OAAO,SAClCnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,iBACApF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACEC,WAAS,EACT/E,KAAK,OACLqC,KAAK,OACL7C,MAAOvB,KAAKY,MAAM0C,KAClByD,SAAU/G,KAAKgE,gBAGnBxC,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAWC,UAAU,WAAWC,OAAO,SACrCnF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,iBACApF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACEtF,MAAOvB,KAAKY,MAAM2C,SAClBwD,SAAU/G,KAAKgE,aACfjC,KAAK,OACLqC,KAAK,cAGT5C,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEI,OAAK,EACLgF,MAAM,QACNjF,KAAK,UAHP,qBAhEaE,aCiER8G,oNAxDbnI,MAAQ,CACNqC,KAAM,MAQRsD,QAAU,SAAC1F,GACT2D,IAAMC,KAAK,2BAA4B,CACrC5D,QACAmI,WAAW,IAEVrE,KAAK,SAAAC,GAAG,OAAI/E,EAAKwE,SAAS,CAAEpB,KAAI,GAAAtC,OAAAb,OAAAmJ,EAAA,EAAAnJ,CAAMD,EAAKe,MAAMqC,MAAjB,CAAuB2B,EAAIC,+FAV5C,IAAAY,EAAAzF,KAClBwE,IAAMmB,IAAI,0BAAkDhB,KAAK,SAAAC,GAAG,OAAIa,EAAKpB,SAAS,CAAEpB,KAAM2B,EAAIC,0CAalG,IAAMqE,EAAa,CACjBhB,SAAU,QAGZ,OACE1G,EAAAC,EAAAC,cAACyH,EAAA,EAAD,KACE3H,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,OACbpB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,mBACbpB,EAAAC,EAAAC,cAAC0H,EAAD,CACE7C,QAASvG,KAAKuG,QACdtD,KAAMjD,KAAKY,MAAMqC,OAEnBzB,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAO6C,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAArG,GAAK,OACjC1B,EAAAC,EAAAC,cAACF,EAAAC,EAAMU,SAAP,KACEX,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CACE/E,IAAK,EACLO,QAAQ,WAERL,EAAAC,EAAAC,cAAA,QAAMwF,MAAOgC,GAAb,mDASR1H,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAO8C,KAAK,QAAQE,UAAWhB,IAC/BhH,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAO8C,KAAK,SAASE,UAAWZ,IAChCpH,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAO8C,KAAK,YAAYE,UAAWX,cAjD7B5G,cCPlBwH,IAASF,OACL/H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,KACE3H,EAAAC,EAAAC,cAACgI,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.37c78dc1.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap'\r\n\r\n// Feature to be implemented in the future - job adding by users\r\n\r\nexport class Refresh extends Component {\r\n    state = {\r\n        title: ''\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        window.location.reload()\r\n        // this.props.refresh(this.state.title);\r\n        // this.setState({ title: '' });\r\n    }\r\n\r\n    // onChange = (e) => this.setState({\r\n    //     [e.target.name]:\r\n    //         e.target.value\r\n    // });\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <ButtonToolbar>\r\n                    <Button\r\n                        variant=\"primary\"\r\n                        size=\"lg\"\r\n                        type=\"submit\"\r\n                        value=\"Refresh\"\r\n                        block\r\n                    >\r\n                        Refresh\r\n                    </Button>\r\n                </ButtonToolbar>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n// PropTypes\r\nRefresh.propTypes = {\r\n    refresh: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Refresh\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Navbar, Nav } from 'react-bootstrap'\r\n\r\nclass NavigationBar extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link as={Link} to={{\r\n                                pathname: \"/jobs\",\r\n                                state: { jobs: this.props.jobs }\r\n                            }}>Home</Nav.Link>\r\n                            <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                    <Button variant=\"outline-danger\" onClick={this.props.logOut}>Log Out</Button>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavigationBar","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Refresh from './Refresh';\r\nimport NavigationBar from './NavigationBar';\r\nimport axios from 'axios';\r\nimport { Alert, Button, FormGroup, FormLabel, FormControl, Nav } from 'react-bootstrap'\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        user: \"\",\r\n        password: \"\",\r\n        isLoggedIn: false,\r\n        successAlert: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const AuthStr = 'Bearer ' + this.getToken()\r\n        axios.get('http://' + process.env.REACT_APP_HOST_URL + '/validate',\r\n            { 'headers': { 'Authorization': AuthStr } })\r\n            .then(res => this.setState({ isLoggedIn: true })\r\n            )\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.successAlert) {\r\n            this.turnOffSuccessAlert = setTimeout(() => {\r\n                this.setState({ successAlert: false })\r\n            }, 1500)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.turnOffSuccessAlert);\r\n        clearTimeout(this.turnOffFailureAlert);\r\n    }\r\n\r\n    setToken = idToken => {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem(\"id_token\", idToken)\r\n    }\r\n\r\n    getToken = () => {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem(\"id_token\")\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        axios.post('http://' + process.env.REACT_APP_HOST_URL + '/login', {\r\n            username: this.state.user,\r\n            password: this.state.password\r\n        })\r\n            .then(res => {\r\n                this.setToken(res.data.access_token)\r\n                this.setState(prevState => {\r\n                    prevState.successAlert = true\r\n                    prevState.isLoggedIn = true\r\n                    return prevState\r\n                }\r\n                )\r\n            }\r\n            ).catch(\r\n                error => {\r\n                    try {\r\n                        alert(error.response.data.message)\r\n                    }\r\n                    catch (err) {\r\n                        alert('Something went wrong')\r\n                    }\r\n                }\r\n            )\r\n        // .catch(function (error) {\r\n        //     error.response &&\r\n        //         console.log(error.response.status)\r\n        // })\r\n        setTimeout(() => !this.state.isLoggedIn && this.setState({ failureAlert: true }), 100)\r\n    }\r\n\r\n    logOut = (event) => {\r\n        localStorage.removeItem(\"id_token\")\r\n        this.setState({\r\n            user: \"\",\r\n            password: \"\",\r\n            isLoggedIn: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const loggedIn = () => {\r\n            return (\r\n                <React.Fragment>\r\n                    <NavigationBar \r\n                    jobs={this.props.jobs}\r\n                    logOut={this.logOut}\r\n                    />\r\n                    {this.state.successAlert && <Alert\r\n                        key={1}\r\n                        variant=\"success\"\r\n                    >\r\n                        Success!\r\n                    </Alert>}\r\n                    <p />\r\n                    <Refresh refresh={this.props.refresh} />\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/jobs\",\r\n                            state: { jobs: this.props.jobs }\r\n                        }}\r\n                    />\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        const loggedOut = () => {\r\n            return (\r\n                <div className=\"Login\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <FormGroup controlId=\"usedr\" bssize=\"large\">\r\n                            <FormLabel>Username</FormLabel>\r\n                            <FormControl\r\n                                autoFocus\r\n                                type=\"text\"\r\n                                name=\"user\"\r\n                                value={this.state.user}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup controlId=\"password\" bssize=\"large\">\r\n                            <FormLabel>Password</FormLabel>\r\n                            <FormControl\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                                type=\"text\"\r\n                                name=\"password\"\r\n                            />\r\n                        </FormGroup>\r\n                        <Button\r\n                            block\r\n                            bsize=\"large\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                        <Nav.Link as={Link} to='/register'>\r\n                            Register\r\n                        </Nav.Link>\r\n                    </form>\r\n                    <Redirect to='/' />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            this.state.isLoggedIn ? loggedIn() : loggedOut()\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth;","import React, { Component } from 'react';\r\nimport Auth from '../Auth';\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        user: \"\",\r\n        password: \"\",\r\n        isLoggedIn: false,\r\n        successAlert: false\r\n    }\r\n\r\n    render() {\r\n        const headerStyle = {\r\n            background: '#333',\r\n            color: '#fff',\r\n            textAlign: 'center',\r\n            padding: '10px'\r\n        }\r\n\r\n        // const linkStyle = {\r\n        //     color: '#fff',\r\n        //     textDecoration: 'none'\r\n        // }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <header style={headerStyle} >\r\n                    <h1>Student Jobs</h1>\r\n                    <Auth\r\n                        refresh={this.props.refresh}\r\n                        jobs={this.props.jobs}\r\n                    />\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Accordion, Button } from 'react-bootstrap';\r\n\r\nexport class JobItem extends Component {\r\n  getStyle = () => {\r\n    return {\r\n      background: '#f4f4f4',\r\n      padding: '7px',\r\n      borderBottom: '2px #ccc dotted',\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const btnStyle = {\r\n      color: '#000000',\r\n      padding: '3px',\r\n      fontSize: '17px'\r\n    }\r\n    const contentStyle = {\r\n      fontSize: '15px'\r\n    }\r\n    const { id, company, title, description, link, location } = this.props.job;\r\n    return (\r\n      <Card>\r\n        <Card.Header>\r\n          <Accordion.Toggle as={Button} style={btnStyle} variant=\"link\" eventKey={id}>\r\n            {title} - <b>{company}</b>, {location}\r\n          </Accordion.Toggle>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey={id}>\r\n          <div className=\"clearfix\">\r\n            <Card.Body style={contentStyle}>\r\n              {/* <a href={link}>Apply<br /><br /></a> */}\r\n              <Button variant=\"primary\" href={link}>Apply</Button><br /><br />\r\n              <div\r\n                // dir={ description[55] == 'פ' ? \"rtl\" : \"ltr\" } logic of switching text direction\r\n                dangerouslySetInnerHTML={{ __html: description }}>\r\n              </div>\r\n            </Card.Body>\r\n          </div>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\n// PropTypes\r\nJobItem.propTypes = {\r\n  job: PropTypes.object.isRequired\r\n}\r\n\r\nexport default JobItem","import React, { Component } from 'react';\r\nimport JobItem from './JobItem';\r\nimport { Accordion } from 'react-bootstrap';\r\n\r\nclass Jobs extends Component {\r\n  render() {\r\n    return (\r\n      <Accordion defaultActiveKey=\"0\">\r\n        {\r\n          this.props.location.state.jobs.map((job) => (\r\n            <JobItem key={job.id} job={job} />\r\n          ))\r\n        }\r\n      </Accordion>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Jobs;\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n        <React.Fragment>\r\n            <center>\r\n                <h2>StudentJobs 1.0</h2>\r\n                <p>Gathers relevant student openings from different websites in one page</p>\r\n            </center>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;","import React, { Component } from \"react\"\r\nimport axios from 'axios'\r\nimport { Button, FormGroup, FormLabel, FormControl } from 'react-bootstrap'\r\n\r\nclass Register extends Component {\r\n\r\n  state = {\r\n    user: \"\",\r\n    password: \"\",\r\n    registered: false\r\n  }\r\n\r\n  setToken = idToken => {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem(\"id_token\", idToken)\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    axios.post('http://' + process.env.REACT_APP_HOST_URL + '/register', {\r\n      username: this.state.user,\r\n      password: this.state.password\r\n    })\r\n      .then(\r\n        res => {\r\n          this.setToken(res.data.access_token)\r\n          alert('Registered successfully')\r\n          this.setState({ registered: true })\r\n        }\r\n      ).catch(\r\n        error => {\r\n          alert(error.response.data.message)\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.registered ? \r\n      window.location.reload()\r\n      : \r\n      <div className=\"Login\">\r\n        <br />\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormGroup controlId=\"usedr\" bssize=\"large\">\r\n            <FormLabel>Username</FormLabel>\r\n            <FormControl\r\n              autoFocus\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={this.state.user}\r\n              onChange={this.handleChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bssize=\"large\">\r\n            <FormLabel>Password</FormLabel>\r\n            <FormControl\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              name=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <Button\r\n            block\r\n            bsize=\"large\"\r\n            type=\"submit\"\r\n          >\r\n            Register\r\n          </Button>\r\n\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\nexport default Register","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Jobs from './components/Jobs';\n// import Refresh from './components/Refresh';\nimport About from './components/pages/About';\nimport Register from './components/pages/Register';\n// import uuid from 'uuid';\nimport axios from 'axios';\nimport { Alert } from 'react-bootstrap'\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    jobs: []\n  }\n\n  componentDidMount() {\n    axios.get('http://' + process.env.REACT_APP_HOST_URL + '/').then(res => this.setState({ jobs: res.data }))\n  }\n\n  // refresh\n  refresh = (title) => {\n    axios.post('https://tobe.implemented', {\n      title,\n      completed: false\n    })\n      .then(res => this.setState({ jobs: [...this.state.jobs, res.data] }));\n  }\n\n  render() {\n    const alertStyle = {\n      fontSize: '17px'\n    }\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container-fluid\">\n            <Header\n              refresh={this.refresh}\n              jobs={this.state.jobs}\n            />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <center>\n                  <Alert\n                    key={1}\n                    variant=\"primary\"\n                  >\n                    <span style={alertStyle}>\n                      Log in or register to display jobs please\n                    </span>\n                  </Alert>\n                </center>\n                {/* <Refresh refresh = {this.refresh}/>\n            <Jobs jobs={this.state.jobs}/> */}\n              </React.Fragment>\n            )} />\n            <Route path=\"/jobs\" component={Jobs} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/register\" component={Register} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from './App';\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n    document.getElementById(\"root\")\n  );\n"],"sourceRoot":""}